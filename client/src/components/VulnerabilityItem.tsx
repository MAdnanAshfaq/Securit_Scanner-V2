import { useState } from "react";
import { Vulnerability, RiskLevel } from "@shared/schema";
import { ChevronDown, ChevronUp, School } from "lucide-react";

interface VulnerabilityItemProps {
  vulnerability: Vulnerability;
}

export default function VulnerabilityItem({ vulnerability }: VulnerabilityItemProps) {
  const [isExpanded, setIsExpanded] = useState(false);

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case RiskLevel.HIGH:
        return "bg-risk-high";
      case RiskLevel.MEDIUM:
        return "bg-risk-medium";
      case RiskLevel.LOW:
        return "bg-risk-low";
      case RiskLevel.INFO:
        return "bg-risk-info";
      default:
        return "bg-gray-400";
    }
  };

  const getSeverityTextColor = (severity: string) => {
    switch (severity) {
      case RiskLevel.HIGH:
        return "text-risk-high";
      case RiskLevel.MEDIUM:
        return "text-risk-medium";
      case RiskLevel.LOW:
        return "text-risk-low";
      case RiskLevel.INFO:
        return "text-risk-info";
      default:
        return "text-gray-400";
    }
  };

  const getSeverityLabel = (severity: string) => {
    switch (severity) {
      case RiskLevel.HIGH:
        return "High Risk";
      case RiskLevel.MEDIUM:
        return "Medium Risk";
      case RiskLevel.LOW:
        return "Low Risk";
      case RiskLevel.INFO:
        return "Informational";
      default:
        return "Unknown";
    }
  };

  return (
    <div className="border rounded-lg mb-4 overflow-hidden">
      <div 
        className="flex items-center p-4 bg-neutral-100 cursor-pointer" 
        onClick={() => setIsExpanded(!isExpanded)}
      >
        <div className={`w-2 h-8 ${getSeverityColor(vulnerability.severity)} rounded mr-3`}></div>
        <div className="flex-grow">
          <h4 className="font-medium">{vulnerability.name}</h4>
          <p className="text-sm text-neutral-300">
            Found in: {vulnerability.location || "N/A"}
          </p>
        </div>
        <div className={`px-2 py-1 ${getSeverityColor(vulnerability.severity)} text-white text-xs rounded-full mr-2`}>
          {getSeverityLabel(vulnerability.severity)}
        </div>
        {isExpanded ? <ChevronUp className="h-5 w-5" /> : <ChevronDown className="h-5 w-5" />}
      </div>
      
      {isExpanded && (
        <div className="p-4 border-t vuln-details">
          <div className="mb-4">
            <h5 className="font-medium mb-2">Description</h5>
            <p className="text-sm">{vulnerability.description}</p>
          </div>
          
          {vulnerability.details && (
            <div className="mb-4">
              <h5 className="font-medium mb-2">Technical Details</h5>
              <div className="bg-neutral-100 p-3 rounded-lg font-mono text-sm overflow-x-auto">
                <p>{vulnerability.details}</p>
              </div>
            </div>
          )}
          
          {vulnerability.recommendation && (
            <div className="mb-4">
              <h5 className="font-medium mb-2">Recommendation</h5>
              <p className="text-sm">{vulnerability.recommendation}</p>
            </div>
          )}
          
          {vulnerability.learnMoreUrl && (
            <div className="flex justify-end">
              <a 
                href={vulnerability.learnMoreUrl} 
                target="_blank" 
                rel="noopener noreferrer"
                className={`${getSeverityTextColor(vulnerability.severity)} hover:underline text-sm flex items-center`}
              >
                <School className="h-4 w-4 mr-1" />
                Learn more about {vulnerability.name.split(" ")[0]}
              </a>
            </div>
          )}
        </div>
      )}
    </div>
  );
}
